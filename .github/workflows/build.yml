name: Build Python

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python:
          - 3.9.0

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup python via pyenv
      uses: gabrielfalcao/pyenv-action@v18
      with:
        default: "${{ matrix.python }}"
        command: |
          #pyenv global ${{ matrix.python }}
          python --version


    - name: Setup NDK
      run: |
        sudo apt-get install -y autoconf automake cmake gawk gettext git gcc make patch pkg-config
        export ANDROID_NDK=/android-ndk

        if [ ! -d "$ANDROID_NDK" ] ; then
            # In general we don't want download NDK for every build, but it is simpler to do it here
            # for CI builds
            NDK_VER=r21d
            sudo apt-get install -y wget bsdtar
            wget --no-verbose https://dl.google.com/android/repository/android-ndk-$NDK_VER-linux-x86_64.zip
            bsdtar xf android-ndk-${NDK_VER}-linux-x86_64.zip
            ANDROID_NDK=/android-ndk-$NDK_VER
        fi
        pwd && ls -l
        # cd /python3-android
        # chmod +x clean.sh
        # ./clean.sh
        # ARCH=arm64 ANDROID_API=21 ./build.sh
        # tree
        

    # - name: Save build artifacts
    #   run: |
    #     mkdir build_artifacts
    #     ls -l
    #     cp -r build/* build_artifacts/
    #     echo ::set-output name=build_artifacts_path::build_artifacts

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
    
  #   - name: Checkout repository
  #     uses: actions/checkout@v2
    
  #   - name: Deploy to output branch
  #     run: |
  #       # Move to the build directory
  #       cd ${{ needs.build.outputs.build_artifacts_path }}
    
  #       # Create a new branch if it doesn't exist
  #       git checkout -B output
    
  #       # Add and commit the changes
  #       git add .
  #       git commit -m "Deploy to output branch"
    
  #       # Push to the output branch
  #       git push origin output
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
